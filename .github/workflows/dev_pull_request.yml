
name: dev_pull_request

on:
  workflow_dispatch:
  #pull_request:
  #  branches:
  #    - dev
  #  paths:
  #    - 'src/**' 
  #    - 'pom.xml' 

jobs:
  dev_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2  
      - name: Build with Maven
        run: mvn -B clean package
  unit_test:
    needs: dev_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2  
      - name: Run Test with Maven
        run: mvn -B test
      - name: List Contents of target Directory
        run: ls -R target
  sonar:
    needs: unit_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2  
      - name: List Contents of target Directory
        run: ls -R target
      - name: Cache SonarCloud Packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  create_uat_package:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2  
      - name: List Contents of target Directory
        run: ls -R target
      - name: Create Staging Directory
        run: |
          mkdir staging
          cp target/*.jar staging
      - name: Set Staging Directory Output
        run: echo "staging" >> $GITHUB_ENV
      - name: Upload Staging Artifact
        uses: actions/upload-artifact@v4
        with:
          name: uat_package
          path: staging
          overwrite: true
          if-no-files-found: error
      - name: Display Artifact URL
        run: echo "Artifact URL =  ${{ needs.create_uat_package.outputs.artifact-url }}"

        

    
