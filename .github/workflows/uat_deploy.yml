
name: uat_deploy

on:
  #workflow_dispatch:
  workflow_run:
    workflows: 
      - dev_pull_request
    types:
      - completed
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v4
      - name: Cache Maven Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            target
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2  
      - name: List Contents of target Directory
        run: ls -R target




        # runs-on: ubuntu-latest
        # env:
        #   EB_PACKAGE_S3_BUCKET : "zzz-cicd-demo-app"
        #   EB_APPLICATION_NAME  : "cicd-demo"
        #   EB_ENVIRONMENT_NAME  : "cicd-demo-env"
        #   DEPLOY_PACKAGE_NAME  : "cicd-demo-${{ github.sha }}.jar" 
        #   AWS_REGION           : "us-east-1"
        #   WORKINGDIRECTORY     : "${{ github.workspace }}"
    
        # steps:
        #   - name: Checkout Source Codes
        #     uses: actions/checkout@v3
    
        #   - name: Set up JDK 21
        #     uses: actions/setup-java@v3
        #     with:
        #       java-version: '21'
        #       distribution: 'temurin'
        #       cache: maven
    
        #   - name: Build with Maven
        #     run: mvn -B clean package
          
        #   - name: Configure AWS credentials
        #     uses: aws-actions/configure-aws-credentials@v1
        #     with:
        #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #       aws-region: ${{ env.AWS_REGION }}
          
        #   - name: Copy JAR file to S3 bucket
        #     run: aws s3 cp ./target/cicd_demo-0.0.1-SNAPSHOT.jar s3://${{ env.EB_PACKAGE_S3_BUCKET }}/${{ env.DEPLOY_PACKAGE_NAME }}
    
        #   - name: Deploy new EB Application version
        #     run: |
        #       aws elasticbeanstalk create-application-version \
        #       --application-name ${{ env.EB_APPLICATION_NAME }} \
        #       --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET  }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME}}" \
        #       --version-label "ver${{ github.sha }}" \
        #       --description "commitSHA-${{ github.sha }}"

  